name: Backend CI/CD

on:
  push:
    branches: [ main ]            # Deploy on push to main
  pull_request:
    branches: [ main ]            # Run lint on PRs to main

jobs:
  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    continue-on-error: true       # ✅ Lint can fail without blocking deploy

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Install Dependencies
      run: npm ci

    - name: Run Linter
      run: npm run lint

  deploy:
    if: github.ref == 'refs/heads/main'
    name: Deploy Backend to EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Install Dependencies
      run: npm ci

    - name: Save EC2 SSH Key
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
        chmod 600 key.pem

    - name: Deploy via SSH
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          # ✅ Load NVM so node/npm/pm2 work in non-login shell
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

          # ✅ Navigate to backend project
          cd ${{ secrets.BACKEND_DIR }}

          # ✅ Pull latest code and install dependencies
          git pull origin main
          npm install

          # ✅ Restart or start PM2 app
          pm2 reload devTinder-backend || \
          pm2 start npm --name "devTinder-backend" -- start

          # ✅ Save PM2 process list
          pm2 save
        EOF
